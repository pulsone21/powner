package modals

import (
	"fmt"
	cmp "github.com/axzilla/templui/components"
	"github.com/axzilla/templui/icons"
	"github.com/pulsone21/powner/internal/entities"
	"github.com/pulsone21/powner/internal/errx"
	"github.com/pulsone21/powner/internal/ui/forms"
	"github.com/pulsone21/powner/internal/ui/partials"
)

templ SkillModal(t entities.SkillHolder, skills *[]entities.Skill) {
	@modalTrigger("skill-modal", "") {
		@cmp.Tooltip(cmp.TooltipProps{
			Trigger: cmp.Button(cmp.ButtonProps{
				Class:    "w-full h-full",
				IconLeft: icons.BookPlus(icons.IconProps{Size: "24"}),
				Variant:  cmp.ButtonVariantGhost,
			}),
			Content: templ.Raw("Add Skill"),
		})
	}
	@cmp.Modal(cmp.ModalProps{ID: "skill-modal", Class: "max-w-3/4 max-h-5/6"}) {
		@cmp.ModalHeader() {
			{ fmt.Sprintf("Add new skill to the %v", t.GetType()) }
			@cmp.Separator(cmp.SeparatorProps{
				Orientation: cmp.SeparatorOrientationHorizontal,
				Class:       "mb-2",
			})
			@cmp.ModalBody() {
				<div class="flex flex-row justify-around">
					<div class="w-1/2 h-full">
						if skills != nil {
							@partials.SkillList(*skills, t, "No Skills found")
						} else {
							<div
								class="w-full h-full "
								hx-get={ fmt.Sprintf("/partials/skills/list?%v=%v", t.GetType(), t.GetID()) }
								hx-trigger="load"
								hx-swap="outerHTML"
							></div>
						}
					</div>
					<div class="w-1/2 h-full">
						@forms.SkillForm(nil)
					</div>
				</div>
			}
			@cmp.ModalFooter() {
			}
		}
	}
}

templ NewSkillModal(err errx.ErrorMap) {
	@modalTrigger("new-skill-modal", "") {
		@cmp.Button(cmp.ButtonProps{
			Class: "w-full h-full",
			Text:  "New Skill",
		})
	}
	@cmp.Modal(cmp.ModalProps{ID: "new-skill-modal", Class: "max-w-md max-h-2/3"}) {
		@cmp.ModalHeader() {
			Create a new Skill
		}
		@cmp.ModalBody() {
			@forms.SkillForm(err)
		}
		@cmp.ModalFooter() {
		}
	}
}
