package components

import (
	"fmt"
	"github.com/pulsone21/powner/internal/entities"
	"github.com/pulsone21/powner/internal/ui/shared"
)

templ MemberListItem(mem entities.Member, teamID string, add bool) {
	<li class="min-h-12">
		<div
			class="flex flex-row justify-between hover:bg-surface0 rounded-lg p-1 cursor-pointer"
			hx-get={ fmt.Sprintf("/api/member/%v", mem.ID) }
			hx-target="#modalContainer"
		>
			<div class="flex flex-col w-1/2">
				<span class="font-bold">{ mem.Name }</span>
				<span class="text-subtext0">{ fmt.Sprint(mem.Age) }</span>
			</div>
			if teamID != "" {
				switch add {
					case false:
						<div class="flex justify-center items-center self-center min-w-12 h-9 w-20 mr-2">
							@shared.AddButton(templ.Attributes{
								"hx-post":   fmt.Sprintf("/partials/teams/%v/member/%v", teamID, mem.ID),
								"hx-target": "closest li",
								"hx-swap":   "outerHTML",
							}, "", "")
						</div>
					case true:
						<div class="flex justify-center items-center self-center min-w-12 h-9 w-20 mr-2">
							@shared.RemoveButton(templ.Attributes{
								"hx-delete": fmt.Sprintf("/partials/teams/%v/member/%v", teamID, mem.ID),
								"hx-target": "closest li",
								"hx-swap":   "outerHTML",
							}, "", "")
						</div>
				}
			}
		</div>
	</li>
}

templ DeleteMemberButton(m entities.Member) {
	<div class="flex justify-center items-center self-center min-w-12 h-9 w-20 mr-2">
		@shared.RemoveButton(templ.Attributes{
			"hx-delete": fmt.Sprintf("/partials/members/%v", m.ID),
			"hx-target": "closest li",
			"hx-swap":   "outerHTML",
		}, "", "")
	</div>
}

templ MemberInfoItem(mem entities.Member, itemFunc MemberItemAddon) {
	<div
		class="flex flex-row justify-between hover:bg-surface0 rounded-lg p-1 cursor-pointer"
		hx-get={ fmt.Sprintf("/partials/members/details/%v", mem.ID) }
		hx-target="#content"
		hx-swap="innerHTML"
		hx-replace-url={ fmt.Sprintf("/members/%v", mem.ID) }
	>
		<div class="flex flex-col w-1/2">
			<p
				class="font-bold truncate min-w-0"
				title={ mem.Name }
			>
				{ mem.Name }
			</p>
			<p
				class="text-subtext0 truncate min-w-0"
				title={ fmt.Sprint(mem.Age) }
			>
				{ fmt.Sprintf("Age: %v",mem.Age) }
			</p>
		</div>
		if itemFunc != nil {
			<div class="flex flex-row justify-center ml-4 items-center">
				@itemFunc(mem)
			</div>
		}
	</div>
}
