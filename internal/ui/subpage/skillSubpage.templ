package subpage

import (
	"fmt"
	"github.com/axzilla/templui/components"
	"github.com/axzilla/templui/icons"
	"github.com/pulsone21/powner/internal/entities"
	"github.com/pulsone21/powner/internal/ui/modals"
	"github.com/pulsone21/powner/internal/ui/partials"
	"github.com/pulsone21/powner/internal/ui/shared"
)

templ SkillDetails(s entities.Skill, topbar bool) {
	<div class="flex flex-col gap-1 h-full w-full">
		<div class="w-full min-h-fit flex flex-row bg-mantle rounded-lg p-2">
			<div class="flex-row w-1/3 h-full">
				<div class="text-red font-extrabold text-3xl">{ s.Name } </div>
				<div>{ s.Description } </div>
			</div>
		</div>
		<div id="skillDetails-Content" class="gap-1 h-full  flex flex-row">
			@shared.Container() {
				Content
			}
		</div>
	</div>
	if topbar {
		@SkillDetailsTopbar(s)
	}
}

templ SkillOverview(skills []entities.Skill, topbar bool) {
	<div class="h-full w-full flex flex-row gap-1">
		<div class="h-full w-1/3 max-w-sm min-w-fit">
			@partials.SkillList(skills, nil, "No Skills")
		</div>
		<div class="h-full w-full">
			<!-- Image placeholder -->
			@components.Skeleton(components.SkeletonProps{Class: "h-[200px] w-full rounded-md mb-4"})
			<!-- Title and content -->
			<div class="space-y-2">
				@components.Skeleton(components.SkeletonProps{Class: "h-5 w-2/3"})
				@components.Skeleton(components.SkeletonProps{Class: "h-4 w-full"})
				@components.Skeleton(components.SkeletonProps{Class: "h-4 w-full"})
				@components.Skeleton(components.SkeletonProps{Class: "h-4 w-3/4"})
				<!-- Footer with actions -->
			</div>
		</div>
	</div>
	if topbar {
		@SkillOverviewTopbar()
	}
}

templ SkillOverviewTopbar() {
	@shared.TopBar(
		components.Breadcrumb(components.BreadcrumbProps{
			Attributes: templ.Attributes{"id": "breadcrumbs"},
			Items: []components.BreadcrumbItem{
				{
					Label: "Home",
					Href:  "/",
					Icon:  icons.House(icons.IconProps{Size: "14"}),
				},
				{
					Label:   "Skills",
					Href:    "/skills",
					Icon:    icons.Book(icons.IconProps{Size: "14"}),
					Current: true,
				},
			},
		})) {
		@modals.NewSkillModal(nil)
	}
}

templ SkillDetailsTopbar(s entities.Skill) {
	@shared.TopBar(
		components.Breadcrumb(components.BreadcrumbProps{
			Attributes: templ.Attributes{"id": "breadcrumbs"},
			Items: []components.BreadcrumbItem{
				{
					Label: "Home",
					Href:  "/",
					Icon:  icons.House(icons.IconProps{Size: "14"}),
				},
				{
					Label: "Skills",
					Href:  "/skills",
					Icon:  icons.Book(icons.IconProps{Size: "14"}),
				},
				{
					Label:   s.Name,
					Href:    fmt.Sprintf("/skills/%v", s.ID),
					Icon:    icons.Users(icons.IconProps{Size: "14"}),
					Current: true,
				},
			},
		})) {
		@modals.NewSkillModal(nil)
	}
}
