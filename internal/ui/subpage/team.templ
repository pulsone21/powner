package subpage

import (
	"fmt"
	"github.com/axzilla/templui/components"
	"github.com/pulsone21/powner/internal/entities"
	"github.com/pulsone21/powner/internal/service"
	"github.com/pulsone21/powner/internal/ui/modals"
	"github.com/pulsone21/powner/internal/ui/partials"
	"github.com/pulsone21/powner/internal/ui/shared"
)

templ TeamsOverview(teams []entities.Team, active *entities.Team) {
	<div class="h-full w-full flex flex-row gap-1">
		<div class="h-full w-1/3 max-w-96 flex flex-col">
			@shared.Container() {
				<div class="flex flex-row w-full justify-center mb-2">
					@modals.NewTeamModal(nil)
				</div>
				@components.Separator(components.SeparatorProps{
					Orientation: components.SeparatorOrientationHorizontal,
					Class:       "mb-2",
				})
				@partials.TeamList(teams)
			}
		</div>
		<div id="teamDetails" class="h-full min-w-2/3 w-full">
			if active != nil {
				@TeamDetails(*active)
			} else {
				@shared.Container() {
					<div class="space-y-2 w-full max-w-sm">
						@components.Skeleton(components.SkeletonProps{Class: "h-4 w-full"})
						@components.Skeleton(components.SkeletonProps{Class: "h-4 w-2/3"})
						@components.Skeleton(components.SkeletonProps{Class: "h-4 w-1/3"})
					</div>
					<div>
						<div class="grid gap-6 md:grid-cols-3">
							<!-- Stats cards -->
							for i := 0; i < 3; i++ {
								<div class="p-4">
									@components.Skeleton(components.SkeletonProps{Class: "h-4 w-20 mb-2"})
									@components.Skeleton(components.SkeletonProps{Class: "h-8 w-24 mb-4"})
									<div class="flex items-center gap-2">
										@components.Skeleton(components.SkeletonProps{Class: "h-4 w-12"})
										@components.Skeleton(components.SkeletonProps{Class: "h-4 w-4"})
									</div>
								</div>
							}
						</div>
						<!-- Chart -->
						<div class="mt-4 p-4">
							@components.Skeleton(components.SkeletonProps{Class: "h-5 w-1/3 mb-6"})
							@components.Skeleton(components.SkeletonProps{Class: "h-[240px] w-full rounded-md"})
						</div>
					</div>
				}
			}
		</div>
	</div>
}

templ TeamDetails(t entities.Team) {
	<div
		class="flex flex-col w-full gap-1 h-full"
		hx-get="/"
		hx-trigger={ fmt.Sprintf("%v from:body", service.DeleteTeamEvent) }
		hx-swap="delete"
	>
		<div class="w-full h-20 flex justify-between">
			@shared.Container() {
				<div>
					<h1 class="text-red font-extrabold text-3xl">{ t.Name } </h1>
					<p>{ t.Description } </p>
				</div>
			}
		</div>
		<div class="h-full flex flex-row gap-1">
			<div class="flex flex-col h-full min-w-fit w-96 gap-1">
				<div class="w-full h-full flex flex-col gap-1">
					@shared.Container() {
						<div
							class="w-full h-12 flex flex-row justify-between gap-1"
						>
							<span class="content-center font-semibold text-xl">Current member</span>
							<div class="w-10 h-10 mx-2">
								@modals.MemberModal(&t)
							</div>
						</div>
						@components.Separator(components.SeparatorProps{
							Orientation: components.SeparatorOrientationHorizontal,
							Class:       "mb-2",
						})
						@partials.TeamMemberList(t)
					}
				</div>
				<div class="w-full h-full flex flex-col gap-1">
					@shared.Container() {
						<div
							class="w-full h-12 flex flex-row justify-between gap-1"
						>
							<span class="content-center font-semibold text-xl">Needed skills</span>
							<div class="w-10 h-10 mx-2">
								@shared.IconButton("SkillAdd", "",
									templ.Attributes{
										"title":      "add skill",
										"hx-get":     fmt.Sprintf("/modals/skills?team=%v", t.ID),
										"hx-swap":    "innerHTML",
										"hx-trigger": "click",
										"hx-target":  "#modalContainer",
									})
							</div>
						</div>
						<div
							class="h-full w-full "
							hx-get={ fmt.Sprintf("/partials/teams/%v/skills", t.ID) }
							hx-trigger={ fmt.Sprintf("%v from:body", service.ChangeTeamEvent) }
							hx-swap="innerHTML"
						>
							@partials.SkillList(t.Skills, &t, "Team has no needed skills")
						</div>
					}
				</div>
			</div>
			// TODO: Add container templ after it is clear 
			<div
				class="w-full bg-mantle rounded-lg p-2"
				hx-get={ fmt.Sprintf("/api/team/%v/diagrams", t.ID) }
				hx-trigger="skillChange from:body"
			>
				//				@charts.DiagramList(t)
			</div>
		</div>
	</div>
}
