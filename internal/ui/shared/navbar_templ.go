// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.833
package shared

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "github.com/axzilla/templui/icons"
import "github.com/pulsone21/powner/internal/ui/components"

import cmp "github.com/axzilla/templui/components"

func Navbar() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"flex flex-col bg-mantle h-full w-full gap-2 items-center rounded-b-lg p-1\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.TTooltip(components.TooltipProps{
			Trigger: cmp.Button(cmp.ButtonProps{
				Class:      "max-h-12 w-full",
				Variant:    cmp.ButtonVariantOutline,
				IconLeft:   icons.Users(icons.IconProps{Size: "24"}),
				HxGet:      "/teams",
				HxTarget:   "#content",
				HxSwap:     "innerHTML",
				Attributes: templ.Attributes{"hx-replace-url": "/teams"},
			}),
			Text:      "Teams",
			ShowArrow: true,
			Side:      cmp.TooltipRight,
		}).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.TTooltip(components.TooltipProps{
			Trigger: cmp.Button(cmp.ButtonProps{
				Class:      "max-h-12 w-full",
				Variant:    cmp.ButtonVariantOutline,
				IconLeft:   icons.User(icons.IconProps{Size: "24"}),
				HxGet:      "/members",
				HxTarget:   "#content",
				HxSwap:     "innerHTML",
				Attributes: templ.Attributes{"hx-replace-url": "/members"},
			}),
			Text:      "Members",
			ShowArrow: true,
			Side:      cmp.TooltipRight,
		}).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.TTooltip(components.TooltipProps{
			Trigger: cmp.Button(cmp.ButtonProps{
				Class:      "max-h-12 w-full",
				Variant:    cmp.ButtonVariantOutline,
				IconLeft:   icons.Book(icons.IconProps{Size: "24"}),
				HxGet:      "/skills",
				HxTarget:   "#content",
				HxSwap:     "innerHTML",
				Attributes: templ.Attributes{"hx-replace-url": "/skills"},
			}),
			Text:      "Skills",
			ShowArrow: true,
			Side:      cmp.TooltipRight,
		}).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.TTooltip(components.TooltipProps{
			Trigger: cmp.Button(cmp.ButtonProps{
				Class:      "max-h-12 w-full",
				Variant:    cmp.ButtonVariantOutline,
				IconLeft:   icons.Settings(icons.IconProps{Size: "24"}),
				HxGet:      "/partials/settings/overview",
				HxTarget:   "#content",
				HxSwap:     "innerHTML",
				Attributes: templ.Attributes{"hx-replace-url": "/settings"},
			}),
			Text:      "Settings",
			ShowArrow: true,
			Side:      cmp.TooltipRight,
		}).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "</div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func SideBar() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var2 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var2 == nil {
			templ_7745c5c3_Var2 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "<div class=\"flex flex-col h-full\"><div class=\"w-20 flex flex-col h-full justify-between\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = Logo().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = Navbar().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "</div><div class=\"w-20 bottom-0 mb-2 flex justify-center items-center\"><div class=\"w-10 h-10 flex group\"><script>\n\t\t\t\t\tdocument.addEventListener('alpine:init', () => {\n\t\t\t\t\t\tAlpine.store('darkMode',{\n\t\t\t\t\t\t\t\tdark: true,\n\n\t\t\t\t\t\t\t\ttoogle() {\n\t\t\t\t\t\t\t\t\tthis.dark = !this.dark\n\t\t\t\t\t\t\t\t\tdocument.documentElement.classList.toggle('dark', this.dark);\n\t\t\t\t\t\t\t\t\t//document.dispatchEvent(new CustomEvent('theme-changed'));\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t</script><div class=\"absolute bg-muted-foreground blur-md rounded-3xl w-10 h-10 opacity-0  group-hover:opacity-70 transition\"></div><div class=\"relative cursor-pointer w-10 h-10 rounded-3xl flex justify-center items-center\" x-data @click=\"$store.darkMode.toogle()\"><div x-show=\"$store.darkMode.dark\" transition>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = icons.Moon(icons.IconProps{Size: "24"}).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "</div><div x-show=\"!$store.darkMode.dark\" transition>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = icons.Sun(icons.IconProps{Size: "24"}).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, "</div></div></div></div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
